--Exercice 1.2 Modélisation d'un arbitre de bus
node cellule(req_in, token_in, override_in, grant_in: bool) returns ( ack_out,token_out, override_out, grant_out: bool)
var w, t :bool;
let 
    t = 0 -> pre token_in;  
    w = 0-> pre req_in and (t or w);

    override_out = override_in or (w and t) ;
    grant_out = not req_in and grant_in;
    ack_out = 0 -> ((w and t) or grant_in) and req_in;

    token_out = t;
tel

node arbitre(req_in1, req_in2, req_in3: bool) returns (gr_out1,ack_out1, ack_out2, ack_out3: bool)
-----------------------Var local
var         tk_out1,ovr_out1,
    gr_out2,tk_out2,ovr_out2,
    gr_out3,tk_out3,ovr_out3 :bool;
let 
    (ack_out1,tk_out1, ovr_out1, gr_out1) = cellule(req_in1,1->tk_out3, 0,gr_out2);

    (ack_out2,tk_out2, ovr_out2, gr_out2) = cellule(req_in2,tk_out1, ovr_out1, gr_out3);
    
    (ack_out3,tk_out3, ovr_out3, gr_out3) = cellule(req_in3,tk_out2, ovr_out2, not ovr_out3);
tel

--Exercice 2.1  Indéterminisme
node env(S,R : bool; o : bool) returns (set,reset : bool);
let
   set = if S and not R then 1 else if S and R then o else 0;
   reset = if not S and  R then 1 else if S and R then o else 0;
tel

--Question 2 : Pouvez-vous exprimer cette propriété avec un observateur, pourquoi ??



--Exercice 2.2 : Activation sporadique de l'exécution des composants
